#!/bin/sh

FEDORACLIPACK="ShellCheck aria2 curl dnf-plugin-tracer dnf-utils firewall-config flatpak fzf git htop mlocate newsboat podman policycoreutils-sandbox python3-pip ranger ripgrep selinux-policy-sandbox stow tmux toolbox tree unrar util-linux-user zsh"
FEDORAGUIPACK="chromium deja-dup firefox gnome-extensions-app gnome-shell-extension-appindicator gnome-tweaks gstreamer1-libav gstreamer1-plugin-openh264 gstreamer1-plugins-bad-free gstreamer1-plugins-bad-free-extras gstreamer1-plugins-base gstreamer1-plugins-good gstreamer1-plugins-good-extras gstreamer1-plugins-good-gtk gstreamer1-plugins-good-qt mpv rhythmbox shotwell thunderbird timeshift transmission virt-manager wl-clipboard"

DEBCLIPACK="aria2 curl firewall-config firewalld flatpak fzf git htop mlocate newsboat podman python3-pip ranger ripgrep stow tmux tmux-plugin-manager tmuxinator tree wget zsh"
DEBGUIPACK="deja-dup firefox gnome-tweaks mpv rhythmbox shotwell thunderbird timeshift transmission virt-manager xclip"

ARCHCLIPACK="aria2 base-devel curl firewalld fzf git htop mlocate newsboat podman python-pip ranger ripgrep shellcheck sof-firmware stow tmux toolbox tree util-linux zsh"
ARCHGUIPACK="chromium deja-dup discord firefox gnome-tweaks mpv rhythmbox shotwell telegram-desktop thunderbird transmission-gtk virt-manager wl-clipboard"

startsudo() {
    sudo -v
    ( while true; do sudo -v; sleep 50; done; ) &
    SUDO_PID="$!"
    trap stopsudo INT TERM
}

stopsudo() {
    kill "$SUDO_PID"
    trap - INT TERM
    sudo -k
}

getos() {
	if [ -f /etc/os-release ]; then
		. /etc/os-release
		OS=$NAME
		VER=$VERSION_ID
	elif type lsb_release >/dev/null 2>&1; then
		OS=$(lsb_release -si)
		VER=$(lsb_release -sr)
	elif [ -f /etc/lsb-release ]; then
		. /etc/lsb-release
		OS=$DISTRIB_ID
		VER=$DISTRIB_RELEASE
	elif [ -f /usr/lib/os-release ]; then
		. /usr/lib/os-release
		OS=$NAME
		VER=$VERSION_ID
	else
		OS=$(uname -s)
		VER=$(uname -r)
	fi
}

isgnomeinstalled() {
	case "$OS" in
		Ubuntu | Debian )
			dpkg -l gnome-shell
			;;
		Fedora )
			rpm -q gnome-shell
			;;
		"Arch Linux" )
			pacman -Qi gnome-shell
			;;
	esac

	if [ -z $? ]; then
		GNOMEVER="$(gnome-shell --version | cut -d' ' -f3 | cut -d'.' -f1)"
	fi
}

gnomeconfig() {
	if [ -n "${GNOMEVER+x}" ]; then
		echo "[/]
		sources=[('xkb', 'us')]
		xkb-options=['compose:ralt', 'terminate:ctrl_alt_bksp', 'caps:escape_shifted_capslock']" | dconf load /org/gnome/desktop/input-sources/
		echo "[/]
		click-method='fingers'
		tap-to-click=false
		two-finger-scrolling-enabled=true" | dconf load /org/gnome/desktop/pheripherals/touchpad/
		echo "[/]
		close=['<Shift><Super>q']" | dconf load /org/gnome/desktop/wm/keybindings/
		echo "[/]
		button-layout='appmenu:minimize,maximize,close'
		resize-with-right-button=true" | dconf load /org/gnome/desktop/wm/preferences/
		echo "[/]
		night-light-enabled=true
		night-light-temperature=uint32 3981" | dconf load /org/gnome/settings-daemon/plugins/color/
		echo "[/]
		center-new-windows=true" | dconf load /org/gnome/mutter/
		echo "[/]
		default-zoom-level='small'
		use-tree-view=true" | dconf load /org/gnome/nautilus/list-view/
		echo "[/]
		default-folder-viewer='list-view'
		search-filter-time-type='last_modified'
		search-view='list-view'
		show-create-link=true
		show-delete-permanently=true" | dconf load /org/gnome/nautilus/preferences/
		echo "[/]
		clock-show-date=true
		clock-show-seconds=true
		clock-show-weekday=true
		enable-hot-corners=true
		gtk-im-module='gtk-im-context-simple'
		show-battery-percentage=true
		text-scaling-factor=1.0" | dconf load /org/gnome/desktop/interface/
		echo "[/]
		show-extensions-notice=false" | dconf load /org/gnome/tweaks/
		echo "[/]
		sleep-inactive-ac-timeout=3600
		sleep-inactive-ac-type='nothing'" | dconf load /org/gnome/settings-daemon/plugins/power/

		gsettings set org.gnome.mutter experimental-features "['scale-monitor-framebuffer']"

		if [ "$GNOMEVER" -lt 40 ]; then
			echo "[/]
			terminal=['<Super>Return']" | dconf load /org/gnome/settings-daemon/plugins/media-keys/
		else
			echo "[/]
			custom-keybindings=['/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/']

			[custom-keybindings/custom0]
			binding='<Super>Return'
			command='gnome-terminal'
			name='Terminal'" | dconf load /org/gnome/settings-daemon/plugins/media-keys/
		fi

		if [ "$OS" = "Ubuntu" ]; then
			gsettings set org.gnome.shell.extensions.dash-to-dock click-action 'minimize-or-previews'
		fi
	fi
}

purgesnap() {
	case "$OS" in
		Ubuntu | Debian )
			if dpkg -l snapd; then
				sudo apt-get -y autoremove --purge snapd
				sudo apt-mark hold snapd
			fi
			;;
		Fedora )
			if rpm -q snapd; then
				sudo dnf autoremove snapd
			fi
			;;
		"Arch Linux" )
			if pacman -Qi snapd; then
				sudo pacman -Rs snapd
			fi
			;;
	esac

	sudo rm -rf /var/cache/snapd /var/lib/snapd /snap /var/snap "$HOME/snap"
}

installeditors() {
	case "$OS" in
		Ubuntu | Debian )
			NVIMPATH="$HOME/.local/bin/nvim"
			NVIMURL=$(curl -L -s https://api.github.com/repos/neovim/neovim/releases/latest | grep -o -E "https://(.*)neovim(.*)nvim.appimage" | head -1)
			mkdir -p "$NVIMPATH"
			curl -L -s "$NVIMURL" -o "$NVIMPATH"
			chmod +x "$NVIMPATH"
			;;
		Fedora )
			sudo dnf install -y neovim
			;;
		"Arch Linux" )
			sudo pacman -Syu --noconfirm --needed neovim
			;;
	esac
	pip3 install yt-dlp pynvim --user --no-warn-script-location
}

installcli() {
	case "$OS" in
		Ubuntu | Debian )
			sudo apt-get install -y $DEBCLIPACK
			;;
		Fedora )
			sudo dnf install -y $FEDORACLIPACK
			;;
		"Arch Linux" )
			sudo pacman -Syu --noconfirm --needed $ARCHCLIPACK
			;;
	esac
}

installgui() {
	case "$OS" in
		Ubuntu | Debian )
			sudo apt-get install -y $DEBGUIPACK
			;;
		Fedora )
			sudo dnf install -y $FEDORAGUIPACK
			;;
		"Arch Linux" )
			sudo pacman -Syu --noconfirm --needed $ARCHGUIPACK
			;;
	esac
}

packagesetup() {
	case "$OS" in
		Ubuntu | Debian )
			export DEBIAN_FRONTEND=noninteractive
			sudo apt-get update && sudo apt-get upgrade -y
			;;

		Fedora )
			sudo dnf install -y "https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm" "https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm"
			sudo dnf upgrade -y
			;;

		"Arch Linux" )
			sudo sed -i '/VerbosePkgLists/s/^#//g' /etc/pacman.conf
			sudo sed -i '/Color/s/^#//g' /etc/pacman.conf
			sudo sed -i '/ParallelDownloads/c\ParallelDownloads = 5' /etc/pacman.conf
			sudo pacman -Syu --noconfirm
			;;
	esac
}

enablefstrim() {
	sudo systemctl enable fstrim.timer
}

enableiosfastcharge() {
	echo "SUBSYSTEM==\"usb\", ACTION==\"add\", ENV{ID_MODEL}==\"iPhone\", RUN+=\"/usr/bin/env sh -c 'echo Fast > /sys/class/power_supply/apple_mfi_fastcharge/charge_type'\"" | sudo tee /etc/udev/rules.d/99-ios-fastcharge.rules.j2
}

services() {
	sudo systemctl enable --now firewalld
	sudo systemctl disable --now bluetooth
	sudo usermod -aG libvirt "$USER"
	sudo usermod -aG kvm "$USER"
}

installflatpaks() {
	sudo flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
	flatpak update -y
	flatpak install -y flathub com.spotify.Client
	flatpak install -y flathub org.telegram.desktop
	flatpak install -y flathub com.discordapp.Discord
	flatpak install -y flathub com.github.tchx84.Flatseal
	#flatpak override --user --env=QT_QPA_PLATFORM=wayland org.telegram.desktop
	#flatpak override --user --env=QT_QPA_PLATFORM=xcb org.telegram.desktop
}

ohmyzsh() {
	sudo chsh -s "$(command -v zsh)" "$USER"
	rm -rf "$HOME/.oh-my-zsh"
	export CHSH=no
	export RUNZSH=no
	sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
	git clone https://github.com/zsh-users/zsh-autosuggestions "${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/zsh-autosuggestions"
	git clone https://github.com/zsh-users/zsh-syntax-highlighting.git "${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting"
}

fonts() {
	mkdir -p "$HOME/.local/share/fonts"
	aria2c https://github.com/ryanoasis/nerd-fonts/raw/master/patched-fonts/SourceCodePro/Regular/complete/Sauce%20Code%20Pro%20Nerd%20Font%20Complete%20Mono.ttf -d "$HOME/.local/share/fonts"
	aria2c https://github.com/ryanoasis/nerd-fonts/raw/master/patched-fonts/UbuntuMono/Regular/complete/Ubuntu%20Mono%20Nerd%20Font%20Complete%20Mono.ttf -d "$HOME/.local/share/fonts"
}

dotfiles() {
	if [ -d "$HOME/.dotfiles" ]; then
		mv "$HOME/.dotfiles" "$HOME/.dotfiles-old"
	fi

	if [ -f "$HOME/.ssh/id_ed25519" ]; then
		git clone git@github.com:francesconicoletta/dotfiles.git "$HOME/.dotfiles"
	else
		printf "\nssh key not present.\n"
		git clone https://github.com/francesconicoletta/dotfiles.git "$HOME/.dotfiles"
	fi

	rm -f "$HOME/.zshrc" "$HOME/.zshenv"
	cd "$HOME/.dotfiles" || exit
	make stow

	grep -v -e "source /usr/share/doc/fzf/examples/key-bindings.zsh" \
		-e "source /usr/share/doc/fzf/examples/completion.zsh" \
		-e "source /usr/share/fzf/shell/key-bindings.zsh" \
		-e "source /usr/share/fzf/key-bindings.zsh" \
		-e "source /usr/share/fzf/completion.zsh" "$HOME/.zshrc" > "$HOME/.zshrc-old"
	mv "$HOME/.zshrc-old" "$HOME/.zshrc"

	case "$OS" in
		Ubuntu | Debian )
			echo "source /usr/share/doc/fzf/examples/key-bindings.zsh" | tee -a "$HOME/.zshrc"
			echo "source /usr/share/doc/fzf/examples/completion.zsh" | tee -a "$HOME/.zshrc"
			;;
		Fedora )
			echo "source /usr/share/fzf/shell/key-bindings.zsh" | tee -a "$HOME/.zshrc"
			;;
		"Arch Linux" )
			echo "source /usr/share/fzf/key-bindings.zsh" | tee -a "$HOME/.zshrc"
			echo "source /usr/share/fzf/completion.zsh" | tee -a "$HOME/.zshrc"
			;;
	esac
}

gitconfig() {
	git config --global user.email "francesconicoletta@nomnp.com"
	git config --global user.name "Francesco Nicoletta Puzzillo"
}

nix() {
	sudo mkdir -p -m 0755 /nix
	sudo chown "$USER" /nix
	curl -L https://nixos.org/nix/install | sh -s
	. "$HOME/.nix-profile/etc/profile.d/nix.sh"
	nix-env -i sumneko-lua-language-server
	nix-env -i nixpkgs.ripgrep-all
}

notifyend() {
	if [ -n "${GNOMEVER+x}" ]; then
		gdbus call --session \
			--dest=org.freedesktop.Notifications \
			--object-path=/org/freedesktop/Notifications \
			--method=org.freedesktop.Notifications.Notify \
			"bootstrap" 0 "" "bootstrap" "Completed successfully." \
			'[]' '{"urgency": <1>}' 5000
	else
		echo "Bootstrap completed successfully."
	fi
}

dir=$(cd -- "$(dirname -- "$0")" && pwd)
cd "$dir" || exit

startsudo
getos
isgnomeinstalled
gnomeconfig
packagesetup
purgesnap
installcli
installeditors

if ! grep hypervisor < /proc/cpuinfo; then
	installgui
	enablefstrim
	enableiosfastcharge
	services
	ohmyzsh
	fonts
	if ! [ "$OS" = "Arch Linux" ]; then
		installflatpaks
		nix
	fi
fi

gitconfig
dotfiles
stopsudo
notifyend
