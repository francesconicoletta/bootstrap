#!/bin/sh

FEDORACLIPACK="ShellCheck aria2 curl dnf-plugin-tracer dnf-utils fzf git htop mlocate newsboat podman python3-pip ranger ripgrep selinux-policy-sandbox stow tmux toolbox tree util-linux-user"
FEDORAGUIPACK="chromium deja-dup firefox gnome-extensions-app gnome-shell-extension-appindicator gnome-tweaks mpv rhythmbox shotwell thunderbird transmission virt-manager wl-clipboard firewall-config policycoreutils-sandbox"

DEBCLIPACK="aria2 curl firewall-config firewalld fzf git htop mlocate newsboat podman python3-pip ranger ripgrep stow tmux tmux-plugin-manager tmuxinator tree wget"
DEBGUIPACK="deja-dup gnome-tweaks mpv rhythmbox shotwell thunderbird timeshift transmission virt-manager xclip"

ARCHCLIPACK="aria2 base-devel curl firewalld fzf git htop mlocate newsboat podman python-pip ranger ripgrep shellcheck sof-firmware stow tmux toolbox tree util-linux"
ARCHGUIPACK="chromium deja-dup discord firefox gnome-tweaks mpv rhythmbox shotwell telegram-desktop thunderbird transmission-gtk virt-manager wl-clipboard"

startsudo() {
    sudo -v
    ( while true; do sudo -v; sleep 50; done; ) &
    SUDO_PID="$!"
    trap stopsudo INT TERM
}

stopsudo() {
    kill "$SUDO_PID"
    trap - INT TERM
    sudo -k
}

getos() {
	if [ -f /etc/os-release ]; then
		. /etc/os-release
		OS=$NAME
		VER=$VERSION_ID
	elif type lsb_release >/dev/null 2>&1; then
		OS=$(lsb_release -si)
		VER=$(lsb_release -sr)
	elif [ -f /etc/lsb-release ]; then
		. /etc/lsb-release
		OS=$DISTRIB_ID
		VER=$DISTRIB_RELEASE
	elif [ -f /usr/lib/os-release ]; then
		. /usr/lib/os-release
		OS=$NAME
		VER=$VERSION_ID
	else
		OS=$(uname -s)
		VER=$(uname -r)
	fi
}

desktopconfig() {
	localectl set-x11-keymap us "" "" compose:ralt,caps:escape_shifted_capslock,terminate:ctrl_alt_bksp

	if gnome-shell --version; then
		gsettings set org.gnome.desktop.input-sources sources "[('xkb', 'us')]"
		gsettings set org.gnome.desktop.input-sources xkb-options "['compose:ralt', 'terminate:ctrl_alt_bksp', 'caps:escape_shifted_capslock']"
	fi
}

installeditors() {
	case "$OS" in
		Ubuntu | Debian )
			NVIMPATH="$HOME/.local/bin"
			NVIMURL=$(curl -L -s https://api.github.com/repos/neovim/neovim/releases/latest | grep -o -E "https://(.*)neovim(.*)nvim.appimage" | head -1)
			mkdir -p "$NVIMPATH"
			curl -L -s "$NVIMURL" -o "$NVIMPATH/nvim" && chmod +x "$NVIMPATH/nvim"
			;;
		Fedora )
			sudo dnf install -y neovim
			;;
		"Arch Linux" )
			sudo pacman -Syu --noconfirm --needed neovim
			;;
	esac
	pip3 install pynvim --user --no-warn-script-location
}

installcli() {
	case "$OS" in
		Ubuntu | Debian )
			sudo apt-get install -y $DEBCLIPACK
			;;
		Fedora )
			sudo dnf install -y $FEDORACLIPACK
			;;
		"Arch Linux" )
			sudo pacman -Syu --noconfirm --needed $ARCHCLIPACK
			;;
	esac

	pip3 install yt-dlp --user --no-warn-script-location
}

installgui() {
	case "$OS" in
		Ubuntu )
			sudo apt-get install -y $DEBGUIPACK firefox
			;;
		Debian )
			sudo apt-get install -y $DEBGUIPACK firefox-esr
			;;
		Fedora )
			sudo dnf install -y $FEDORAGUIPACK
			sudo dnf group install -y "Multimedia"
			;;
		"Arch Linux" )
			sudo pacman -Syu --noconfirm --needed $ARCHGUIPACK
			;;
	esac
}

packagesetup() {
	case "$OS" in
		Ubuntu | Debian )
			export DEBIAN_FRONTEND=noninteractive
			sudo apt-get update && sudo apt-get upgrade -y
			;;
		Fedora )
			sudo dnf install -y "https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm" "https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm"
			sudo dnf upgrade -y
			;;
		"Arch Linux" )
			sudo sed -i '/VerbosePkgLists/s/^#//g' /etc/pacman.conf
			sudo sed -i '/Color/s/^#//g' /etc/pacman.conf
			sudo sed -i '/ParallelDownloads/c\ParallelDownloads = 5' /etc/pacman.conf
			sudo pacman -Syu --noconfirm
			;;
	esac
}

enablefstrim() {
	sudo systemctl enable fstrim.timer
}

enableiosfastcharge() {
	echo "SUBSYSTEM==\"usb\", ACTION==\"add\", ENV{ID_MODEL}==\"iPhone\", RUN+=\"/usr/bin/env sh -c 'echo Fast > /sys/class/power_supply/apple_mfi_fastcharge/charge_type'\"" | sudo tee /etc/udev/rules.d/99-ios-fastcharge.rules.j2
}

services() {
	sudo systemctl enable --now firewalld
	sudo systemctl disable --now bluetooth
	sudo usermod -aG libvirt "$USER"
	sudo usermod -aG kvm "$USER"
}

dotfiles() {
	if [ -d "$HOME/.dotfiles" ]; then
		mv "$HOME/.dotfiles" "$HOME/.dotfiles-old"
	fi

	if [ -f "$HOME/.ssh/id_ed25519" ]; then
		git clone git@github.com:francesconicoletta/dotfiles.git "$HOME/.dotfiles"
	else
		printf "\nssh key not present.\n"
		git clone https://github.com/francesconicoletta/dotfiles.git "$HOME/.dotfiles"
	fi

	mv "$HOME/.bashrc" "$HOME/.bashrc.old"
	cd "$HOME/.dotfiles" || exit
	make stow

	grep -v -e "source /usr/share/doc/fzf/examples/key-bindings.bash" \
		-e "source /usr/share/doc/fzf/examples/completion.bash" \
		-e "source /usr/share/fzf/shell/key-bindings.bash" \
		-e "source /usr/share/fzf/key-bindings.bash" \
		-e "source /usr/share/fzf/completion.bash" "$HOME/.bashrc" > "$HOME/.bashrc.copy"
	mv "$HOME/.bashrc.copy" "$HOME/.bashrc"

	case "$OS" in
		Ubuntu | Debian )
			echo "source /usr/share/doc/fzf/examples/key-bindings.bash" | tee -a "$HOME/.bashrc"
			echo "source /usr/share/doc/fzf/examples/completion.bash" | tee -a "$HOME/.bashrc"
			;;
		Fedora )
			echo "source /usr/share/fzf/shell/key-bindings.bash" | tee -a "$HOME/.bashrc"
			;;
		"Arch Linux" )
			echo "source /usr/share/fzf/key-bindings.bash" | tee -a "$HOME/.bashrc"
			echo "source /usr/share/fzf/completion.bash" | tee -a "$HOME/.bashrc"
			;;
	esac
}

gitconfig() {
	git config --global user.email "francesconicoletta@nomnp.com"
	git config --global user.name "Francesco Nicoletta Puzzillo"
}

dir=$(cd -- "$(dirname -- "$0")" && pwd)
cd "$dir" || exit

startsudo
getos
desktopconfig
packagesetup
installcli
installeditors
installpip

if ! grep hypervisor < /proc/cpuinfo; then
	installgui
	enablefstrim
	enableiosfastcharge
	services
fi

stopsudo
gitconfig
dotfiles
